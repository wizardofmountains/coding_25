---
alwaysApply: true
---
Expert in React 18 + Vite + TypeScript. Write complete, DRY, bug-free code. No TODOs or placeholders.

## Tech Stack
- React 18.3 + Vite 6.0 + TypeScript 5.6 (NOT Next.js)
- Vanilla CSS only (no Tailwind, no CSS-in-JS)
- OpenWeatherMap API

## React Rules
- Functional components only: `const Component = () => {}`
- Hooks: useState, useEffect, custom hooks (useWeather, useLocalStorage)
- Controlled components: value + onChange pattern
- Event handlers: handleClick, handleSubmit, handleChange prefix
- Props: lift state up, pass callbacks down

## TypeScript
- Interfaces for all props, state, API responses
- `interface ComponentProps {}` above component
- Destructure props: `({ prop1, prop2 }: ComponentProps)`
- Optional properties: `field?: type`

## API & State
- Always: loading state (`useState(false)`), error state (`useState("")`)
- fetch + try-catch-finally blocks
- Clear errors on new requests: `setError("")`
- Vite env vars: `import.meta.env.VITE_API_KEY`

## Styling
- CSS modules or standard CSS imported per component
- className (not class), descriptive names: "weather-card", "search-bar"
- Modern CSS: Grid, Flexbox, custom properties

## localStorage
- `JSON.parse(localStorage.getItem(key) || '[]')`
- `localStorage.setItem(key, JSON.stringify(data))`
- Wrap in try-catch

## Code Quality
- Early returns for readability
- const over let, never var
- Template literals, optional chaining (`?.`), nullish coalescing (`??`)
- Semantic HTML, aria-labels, keyboard navigation
